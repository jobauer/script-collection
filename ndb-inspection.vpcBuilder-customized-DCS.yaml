global:
  # OPTIONAL:DEPENDANT - If you will RAM share to Organizational units this is required
  # This must start with 'o-'.  You can find it in the Organizations service on the left pane
  # ** Replace with overall organizational ID and Account ID owning the organization **
  #organizationId: o-1234
  #organizationMainAccountId: "123456789"
  # REQUIRED - This prefix will pre-pend ALL stacks created, and will be used within the SSM Prefix below
  # This assures that you can deploy multiple environments with similar resources without name collision.
  stackNamePrefix: central-networking
  # REQUIRED - Stacks will create SSM exports in order to exchange information with each other.  This will be the prefix
  # This must begin with a / but not end with a /.  The stackNamePrefix will follow, then all the resources we create
  # will follow with their own path.  ie: /infrastructure/Core/vpcs/dev/vpcid will contain the vpc ID for the vpc named dev
  ssmPrefix: /central-networking/network
  # REQUIRED - The region this stack will deploy to
  region: eu-central-1
  # REQUIRED - A list of availability zones to deploy to.  This will be used by default for all VPC and AZ aware services.
  # You may over-ride this on a case-by-base basis by declaring the availabilityZones statement in each items configuration section.
  availabilityZones:
    - eu-central-1a
    - eu-central-1b
  # OPTIONAL - A list of tags to apply in the form of name: value.  These will be applied to ALL stacks deployed by this app!
  tags:
    - aws-vpc-builder: central-networking

# To be clarified - On-Premise Endpoint (i.e. IP-Address)
#vpns:
#  on-prem:
#    style: transitGatewayAttached
#    ## Substitute for a REAL public IP Address of a VPN device if you plan to establish a VPN connection.  Also adjust the ASN number.
#    newCustomerGatewayIp: XX.48.197.236
#    newCustomerGatewayAsn: XXXXX
#    newCustomerGatewayName: onprem-vpn
#    useTransit: central

# OPTIONAL: The endpoint provider.  This provider provides centralized interVPC inspection services.
providers:
  firewall:
# REQUIRED: the name of the interface provider.  This must be unique within the config file.  It is referred to by the VPCs and Transit routes
    awsNetworkFirewall:
      # REQUIRED: This VPC will create (per availability zone) a Transit Gateway subnet of /28.  A Firewall subnet of /28.  For three AZs
      # a /25 should suffice
      vpcCidr: 10.3.0.0/16
      # REQUIRED: All providers are Transit Gateway attached in our model.  This is the name of the transit gateway to attach to.
      # it must exist with the same name in the transitGateways section.
      useTransit: central
      style: awsNetworkFirewall
      firewallDescription: AWS Network Firewall
      firewallName: centralFirewall

# REQUIRED: The project is vpcBuilder, so we need at least one VPC defined to function!  This is where your VPCs for
# workload are defined.  'specialized' VPCs like firewall, endpoints, or internet egress are defined elsewhere.
vpcs:
# REQUIRED: The name of your VPC.  This uniquely identifies the VPC within the configuration file so should be chosen wisely.
  # NOTE: After the VPC has been deployed this *cannot be changed*.  CloudFormation will see the VPC as being deleted and attempt to delete
  # it.  I've added protections to prevent that from happening (fn:export/fn:import prevents).
  workload1:
  # REQUIRED: This helps our framework decide which 'kind' of VPC you'd like.
    # - 'workloadIsolated' provisions a VPC with no IGW (effectively an isolated VPC).
    # - 'workloadPublic' provisions a VPC with an IGW (effectively a public VPC)
    style: workloadIsolated
    # REQUIRED: The CIDR Address of the VPC.  Use a subnet calculator to make sure you're starting at the beginning of the address space
    # otherwise you'll run into bugs when the CDK carves up your subnets!.  ie: 10.2.3.0/19 is not the start of the CIDR range.  Instead
    # use 10.2.0.0/19.  The configuration parser verifies valid start addresses, so you're safe!
    vpcCidr: 10.1.0.0/16
    # OPTIONAL - A list of availability zones to deploy to which over-rides the global: section
    availabilityZones:
      - eu-central-1a
    # REQUIRED: Definition section for the subnets to deploy.
    # NOTE: Once initially deployed - the Subnet Names in this section cannot be changed.  This is meant to be an 'additive' section
    # after your initial deployment you can add more Subnets, but consider it a 1-way door.
    subnets:
      TgwSubnet:
        # REQUIRED: The CIDR mask to use for the subnet.  Bear in mind these will be decided by the CDK based on the VPC CIDR
        # range specified above.
        # In the future version I will support specifying a full CIDR here versus just a Mask
        cidrMask : 24
      WorkloadSubnet:
        cidrMask : 24

# workload 2
  workload2:
    style: workloadIsolated
    vpcCidr: 10.2.0.0/16
    availabilityZones:
      - eu-central-1b
    subnets:
      TgwSubnet:
        cidrMask : 24
      WorkloadSubnet:
        cidrMask : 24
# OPTIONAL|DEPENDANT.  If any VPCs refer to, providers are defined, or VPNs are defined, this section is required.
# this describes the transit gateways to create (NOTE: at-present we only support one per config file).
transitGateways:
  # REQUIRED: the name of the transit gateway.  This must be unique within the config file.  It is referred to by the VPCs and Transit routes
  central:
    # REQUIRED: Currently, only transitGateway is available which should be fine for most needs.
    style: transitGateway
    # REQUIRED: Description for the Transit gateway (spaces are fine)
    tgwDescription: central TGW
    # NOTE: **Return routes are automatically provisioned without you needing to declare them specifically**
    # OPTIONAL: Default routes.  These will send all traffic without a more specific route to these connections.
    defaultRoutes:
      # Workload can go on-prem via VPN and vice-versa. Traffic is inspected by network firewall
#      - vpcName: workload1
#        routesTo: on-prem
#        inspectedBy: awsNetworkFirewall
#      - vpcName: workload2
#        routesTo: on-prem
#        inspectedBy: awsNetworkFirewall
        # REQUIRED: The name of the thing we're routing from.  This can be a VPC, or a Provider name.
      - vpcName: workload2
        # REQUIRED: The name of the thing we're routing toward.  This can be a VPC, VPN, DxGw, TgwPeer, or Provider name.
        routesTo: workload1
        # OPTIONAL: If we're going to inspect the traffic.  This must be the name of a firewall provider.  Routes are adjusted automatically
        # to assure it passes through the inspection VPC before arriving at its routesTo and vice versa.
        inspectedBy: awsNetworkFirewall
      - vpcName: workload1
        routesTo: workload2
        inspectedBy: awsNetworkFirewall
